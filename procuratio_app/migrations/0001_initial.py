# Generated by Django 4.2.7 on 2023-12-01 17:55

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, null=True, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(max_length=128, null=True, verbose_name='password')),
                ('image_profil', models.ImageField(blank=True, default='default_img.webp', null=True, upload_to='profil_photo/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='utilisateur_groups', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='utilisateur_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('marque', models.CharField(blank=True, max_length=150)),
                ('type', models.CharField(choices=[('shampoing', 'shampoing'), ('peigne', 'peigne'), ('miroir', 'miroir')], max_length=30)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='produit/')),
                ('qte', models.IntegerField()),
                ('prix', models.FloatField()),
            ],
            options={
                'db_table': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150)),
                ('type', models.CharField(choices=[('coupe', 'coupe'), ('rasage barbe', 'rasage barbe'), ('couleur cheveux', 'couleur cheveux')], max_length=30)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='service/')),
                ('prix', models.FloatField()),
            ],
            options={
                'db_table': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=30)),
                ('prenom', models.CharField(max_length=30)),
                ('sexe', models.CharField(choices=[('H', 'Homme'), ('F', 'Femme')], max_length=30)),
                ('adresse', models.CharField(blank=True, max_length=100)),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('num_tel', models.CharField(blank=True, max_length=30)),
            ],
            options={
                'db_table': 'Clients',
            },
            bases=('procuratio_app.utilisateur',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateT', models.DateTimeField(auto_now_add=True)),
                ('MT', models.FloatField()),
                ('MP', models.CharField(max_length=150)),
                ('produits_list', models.ManyToManyField(to='procuratio_app.produit')),
                ('services_list', models.ManyToManyField(to='procuratio_app.service')),
                ('id_client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='procuratio_app.client')),
            ],
            options={
                'db_table': 'Transaction',
            },
        ),
    ]
